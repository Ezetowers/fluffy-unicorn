# -*- mode: ruby -*-
# vi: set ft=ruby :
# backwards compatibility). Please don't change it unless you know what
# you're doing.
boxes = []
boxes.insert(-1, {
  :name => "kmaster-fluffy-unicorn-az01-001",
  :mac => "52:54:00:fb:53:a6",
  :network => 'pxe_network'
})

boxes.insert(-1, {
  :name => "kworker-fluffy-unicorn-az01-001",
  :mac => "52:54:00:fb:53:a9",
  :network => 'pxe_network'
})

Vagrant.configure(2) do |config|
  boxes.each do |box|
    config.vm.define box[:name] do |config|
      #config.vm.box = "coreos-stable"
      #config.vm.box_url = "https://stable.release.core-os.net/amd64-usr/current/coreos_production_vagrant_virtualbox.json"
      config.vm.box = "debian/stretch64"
      config.vm.box_version = "9.9.1"

      config.vm.synced_folder '.', '/vagrant', disabled: true
      config.ssh.insert_key = false
      config.ssh.username = 'core'
      config.ssh.forward_agent = true
      config.vm.boot_timeout = 1


      # config.vm.provider :libvirt do |lv|
      #   boot_network = {'network' => box[:network]}
      #   lv.boot boot_network
      #   lv.random :model => 'random'
      #   lv.storage :file, :size => '10G', :type => 'qcow2', :bus => 'virtio'
      #   lv.memory = "1280"
      #   lv.keymap = "de"
      #   lv.mgmt_attach = false
        # libvirt.boot 'network'
        # libvirt.mgmt_attach = 'false'
        # libvirt.management_network_name = "pxe_network"
        # libvirt.management_network_address = "192.168.0.0/24"
        # libvirt.management_network_mode = "nat"
      # end

      config.vm.provider :virtualbox do |vb|
        vb.memory = "1280"
        vb.cpus = "1"
        vb.gui = false
        vb.check_guest_additions = false
        vb.functional_vboxsf     = false
        config.vm.base_mac = box[:mac].gsub(':', '')
        vb.customize [
          'modifyvm', :id,
          '--nic1', 'intnet',
          '--intnet1', box[:network],
          '--boot1', 'net',
          '--boot2', 'none',
          '--boot3', 'none',
          '--boot4', 'none'
        ]

      end
    end
  end
end
